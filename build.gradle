//
// Install the gradle Ice Builder plug-in from the plug-in portal
//
plugins {
    id 'com.zeroc.gradle.ice-builder.slice' version '1.4.7' apply false
    id 'org.hidetake.ssh' version '2.10.1' apply false
}
  
subprojects {
    //
    // Apply Java and Ice Builder plug-ins to all sub-projects
    //
    apply plugin: 'java'
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'
    apply plugin: 'org.hidetake.ssh'
 
    //
    // Both Client and Server projects share the HelloWorldCallback.ice Slice definitions
    //
    slice {
        java {
            files = [file("../HelloWorldCallback.ice")]
        }
    }

    remotes {
        xhgrid19{
            host = 'xhgrid19'
            user = 'swarch'
            password = 'swarch'
            agent = true
        }

        xhgrid18{
            host = 'xhgrid18'
            user = 'swarch'
            password = 'swarch'
            agent = true
        }

        xhgrid17{
            host = 'xhgrid17'
            user = 'swarch'
            password = 'swarch'
            agent = true
        }
    }

    ssh.settings {
        dryRun = project.hasProperty('dryRun')
        knownHosts = allowAnyHosts
    }
 
    //
    // Use Ice JAR files from maven central repository
    //
    repositories {
        mavenCentral()
    }
 
    //
    // Both Client and Server depend only on Ice JAR
    //
    dependencies {
        implementation 'com.zeroc:ice:3.7.6'
    }
 
    //
    // Create a JAR file with the appropriate Main-Class and Class-Path attributes
    //
    jar {
        manifest {
            attributes(
                "Main-Class": project.name.capitalize(),
                "Class-Path": '/opt/Ice-3.7.6/lib/ice-3.7.6.jar'
                        //configurations.runtimeClasspath.resolve().collect { it.toURI() }.join(' ')
            )
        }
    }

    def remoteFolder = "A00365918/tarea3"
    def PROJECT_PATH = path

    task deploy {
        doLast {
            ssh.run {
                if (name == 'server'){
                    session(remotes.xhgrid19){
                        def local = execute 'pwd'
                        put from: "$PROJECT_PATH/build/libs/server.jar", into: "$local/$remoteFolder", override: true
                    }
                }

                if (name == 'client'){
                    session(remotes.xhgrid18){
                        def local = execute 'pwd'
                        put from: "$PROJECT_PATH/build/libs/client.jar", into: "$local/$remoteFolder", override: true
                    }

                    session(remotes.xhgrid17){
                        def local = execute 'pwd'
                        put from: "$PROJECT_PATH/build/libs/client.jar", into: "$local/$remoteFolder", override: true
                    }
                }


            }
            println "Server Deployed"
        }
        dependsOn build
    }

}
